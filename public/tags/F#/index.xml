<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>F# on Küse&#39;s Codes</title>
    <link>http://localhost:1313/tags/F%23/</link>
    <description>Recent content in F# on Küse&#39;s Codes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/F%23/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dependency Injection in dotnet</title>
      <link>http://localhost:1313/draft/2023-08-10-dependency-injection/</link>
      <pubDate>Thu, 10 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/draft/2023-08-10-dependency-injection/</guid>
      <description>&lt;p&gt;Dependency injection&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bolero hosting Razor page</title>
      <link>http://localhost:1313/post/2023-04-11-bolero-razor/</link>
      <pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2023-04-11-bolero-razor/</guid>
      <description>&lt;p&gt;In this post we investigate how to use Razor pages on the host and &lt;a href=&#34;https://fsbolero.io&#34;&gt;Bolero&lt;/a&gt; WebAssembly on the client side. The final code can be found on &lt;a href=&#34;https://github.com/mmgreiner/Tutorials&#34;&gt;My github - Tutorials - BoleroAppRazor&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Miscellaneous</title>
      <link>http://localhost:1313/post/2023-03-18-miscellaneous/</link>
      <pubDate>Sat, 18 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2023-03-18-miscellaneous/</guid>
      <description>&lt;p&gt;This is a list of reminders and open questions I still wanted to look at in more detail.&lt;/p&gt;
&lt;h2 id=&#34;csv-conversion&#34;&gt;CSV conversion&lt;/h2&gt;
&lt;p&gt;Next to &lt;a href=&#34;https://fsprojects.github.io/FSharp.Data/&#34;&gt;FSharp.Data&lt;/a&gt; there is &lt;a href=&#34;https://joshclose.github.io/CsvHelper/&#34;&gt;CSVHelper&lt;/a&gt;. However, it does not support FSharp types intrinsically. A &lt;a href=&#34;https://stackoverflow.com/questions/66401283/how-do-you-use-csvhelper-csvwriter-with-f-option-types&#34;&gt;stackoverflow&lt;/a&gt; article describes the details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RESTful API</title>
      <link>http://localhost:1313/post/2023-03-15-RESTApi/</link>
      <pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2023-03-15-RESTApi/</guid>
      <description>&lt;p&gt;This contains some thoughts how to implement RESTful APIs.&lt;/p&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;tbd&lt;/p&gt;
&lt;h2 id=&#34;best-practices&#34;&gt;Best practices&lt;/h2&gt;
&lt;p&gt;A search for RESTful API best practices reveals many sites:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Github resources</title>
      <link>http://localhost:1313/post/2023-02-10-github-fsharp/</link>
      <pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2023-02-10-github-fsharp/</guid>
      <description>&lt;p&gt;Some of my codes are documented on my &lt;a href=&#34;https://github.com/mmgreiner&#34;&gt;Github&lt;/a&gt; with description in the readme files. Take a look there.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Github&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/mmgreiner/BoleroApp&#34;&gt;BoleroApp&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;A simple &lt;a href=&#34;https://fsbolero.io&#34;&gt;Bolero&lt;/a&gt; app with file upload and data repository using dependency injection&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/mmgreiner/StringAlgorithms&#34;&gt;StringAlgorithms&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Some string algorithms in &lt;a href=&#34;https://fsharp.org&#34;&gt;F#&lt;/a&gt; to measure string similarity&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/mmgreiner/WebAPI&#34;&gt;WebAPI&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;A net7.0 based RestAPI in &lt;a href=&#34;https://fsharp.org&#34;&gt;F#&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/mmgreiner/dependencyInjection&#34;&gt;DependencyInjection&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;simple attempts at dependency injection in &lt;a href=&#34;https://fsharp.org&#34;&gt;F#&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/mmgreiner/Tutorials/tree/master/MinimalApiPost&#34;&gt;MinimalAPI&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Minimal API with a file upload example&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/mmgreiner/Tutorials/tree/master/BoleroAppRazor&#34;&gt;BoleroAppRazor&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://fsbolero.io&#34;&gt;Bolero&lt;/a&gt; App, but using Razor pages on the server&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>Command line parsing</title>
      <link>http://localhost:1313/draft/2023-02-01-command-line-parsing/</link>
      <pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/draft/2023-02-01-command-line-parsing/</guid>
      <description>&lt;h2 id=&#34;commandlineparser&#34;&gt;CommandLineParser&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/commandlineparser/commandline&#34;&gt;https://github.com/commandlineparser/commandline&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nuget.org/packages/CommandLineParser.FSharp/&#34;&gt;https://www.nuget.org/packages/CommandLineParser.FSharp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/commandlineparser/commandline/wiki&#34;&gt;https://github.com/commandlineparser/commandline/wiki&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&amp;lt;&lt;/span&gt;Option&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;read&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; Required &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; HelpText &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Input files.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&amp;gt;]&lt;/span&gt; files &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; seq&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&amp;lt;&lt;/span&gt;Option&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;HelpText &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Prints all messages to standard output.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&amp;gt;]&lt;/span&gt; verbose &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&amp;lt;&lt;/span&gt;Option&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Default &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;русский&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; HelpText &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content language.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&amp;gt;]&lt;/span&gt; language &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&amp;lt;&lt;/span&gt;Value&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; MetaName&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;offset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; HelpText &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;File offset.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&amp;gt;]&lt;/span&gt; offset &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int64&lt;/span&gt; option&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; main argv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CommandLine.Parser.Default.ParseArguments&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;(&lt;/span&gt;argv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;match&lt;/span&gt; result &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:?&lt;/span&gt; Parsed&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; parsed &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; run parsed&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:?&lt;/span&gt; NotParsed&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; notParsed &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; fail notParsed&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Errors
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;argu&#34;&gt;Argu&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://fsprojects.github.io/Argu/&#34;&gt;https://fsprojects.github.io/Argu/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Authentication</title>
      <link>http://localhost:1313/draft/2023-01-01-authentication/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/draft/2023-01-01-authentication/</guid>
      <description>&lt;p&gt;Collect information about authentication.&lt;/p&gt;
&lt;h3 id=&#34;aspnetsecurityoauthproviders&#34;&gt;AspNet.Security.OAuth.Providers&lt;/h3&gt;
&lt;p&gt;Good samples of aspnet MVC with google, twitter, Apple-ID:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers&#34;&gt;https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;AspNet.Security.OAuth.Providers&lt;/strong&gt; is a &lt;strong&gt;collection of security middleware&lt;/strong&gt; that you can use in your &lt;strong&gt;ASP.NET Core&lt;/strong&gt;application to support social authentication providers like &lt;strong&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&#34;https://foursquare.com/&#34;&gt;Foursquare&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://www.dropbox.com/&#34;&gt;Dropbox&lt;/a&gt;&lt;/strong&gt;. It is directly inspired by &lt;strong&gt;&lt;a href=&#34;https://github.com/jerriep&#34;&gt;Jerrie Pelser&lt;/a&gt;&lt;/strong&gt;&amp;rsquo;s initiative, &lt;strong&gt;&lt;a href=&#34;https://github.com/RockstarLabs/OwinOAuthProviders&#34;&gt;Owin.Security.Providers&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PDF to text conversion</title>
      <link>http://localhost:1313/post/2022-12-01-pdf-converter/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2022-12-01-pdf-converter/</guid>
      <description>&lt;p&gt;There is once in a while the need to extract pure text from PDF files. This blog shows some attempts to do it with dot, with &lt;a href=&#34;https://www.ruby-lang.org/en/&#34;&gt;ruby&lt;/a&gt;, and with command line utitilites.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Input file element with Bolero</title>
      <link>http://localhost:1313/post/2022-10-20-input-file/</link>
      <pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2022-10-20-input-file/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://fsbolero.io&#34;&gt;Bolero&lt;/a&gt; is a set of free and open-source libraries and tools to write web applications in &lt;a href=&#34;https://fsharp.org/&#34;&gt;F#&lt;/a&gt;. With it, you can write fully dynamic client-side web applications from the comfort of a strongly-typed functional language, all with great performance.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Json Serialization</title>
      <link>http://localhost:1313/draft/2022-10-01-JsonSerialization/</link>
      <pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/draft/2022-10-01-JsonSerialization/</guid>
      <description>&lt;p&gt;Best help: &lt;a href=&#34;https://github.com/Tarmil/FSharp.SystemTextJson&#34;&gt;FSharp.System.TextJson&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#r&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nuget: FSharp.SystemTextJson&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;open&lt;/span&gt; System.Text.Json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;open&lt;/span&gt; System.Text.Json.Serialization
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JsonSerializerOptions()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Converters&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;JsonFSharpConverter()&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; me &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{|&lt;/span&gt; MiddleName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Some &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Max&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; Birtday &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; System.DateTime&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1965&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 11&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 10&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; you &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{|&lt;/span&gt; MiddleName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Option&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;.&lt;/span&gt;None&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; Birtday &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; System.DateTime&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1980&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 31&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JsonSerializer.Serialize&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;me&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; options&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// val it: string = &amp;#34;{&amp;#34;Birtday&amp;#34;:&amp;#34;1965-11-10T00:00:00&amp;#34;,&amp;#34;MiddleName&amp;#34;:&amp;#34;Max&amp;#34;}&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;JsonSerializer.Serialize&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;you&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; options&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// val it: string = &amp;#34;{&amp;#34;Birtday&amp;#34;:&amp;#34;1980-01-31T00:00:00&amp;#34;,&amp;#34;MiddleName&amp;#34;:null}&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;json-serialization-with-bolero&#34;&gt;Json serialization with Bolero&lt;/h2&gt;
&lt;p&gt;tbd&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Static templating with handlebars, liquid and others</title>
      <link>http://localhost:1313/post/2022-08-29-static-templating/</link>
      <pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2022-08-29-static-templating/</guid>
      <description>&lt;p&gt;Templating is an proofen method to create static web pages. Typically, you write your html pages and fill in some parameters at page assembly time. Well-known templating languages are &lt;a href=&#34;https://shopify.github.io/liquid/&#34;&gt;Liquid&lt;/a&gt;, which is written in ruby and used by &lt;a href=&#34;https://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt;, and &lt;a href=&#34;https://handlebarsjs.com&#34;&gt;Handlebars&lt;/a&gt;, which calls itself &lt;em&gt;minimal templating on steroids&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bolero Hints</title>
      <link>http://localhost:1313/post/2022-08-21-Bolero/</link>
      <pubDate>Sun, 21 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2022-08-21-Bolero/</guid>
      <description>&lt;p&gt;This blog contains some experiences working with &lt;a href=&#34;https://fsbolero.io/docs/&#34;&gt;Bolero&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Bolero is a set of free and open-source libraries and tools to write web applications in &lt;a href=&#34;https://fsharp.org&#34;&gt;F#&lt;/a&gt;. With it, you can write fully dynamic client-side web applications from the comfort of a strongly-typed functional language, all with great performance.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Machine Learning with ML.NET</title>
      <link>http://localhost:1313/post/2022-04-08-machine-learning/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2022-04-08-machine-learning/</guid>
      <description>&lt;p&gt;Machine learning with &lt;a href=&#34;https://dotnet.microsoft.com/en-us/learn/ml-dotnet&#34;&gt;ML.NET&lt;/a&gt; is documented in a confusing way, in particular when it comes to F#.&lt;/p&gt;
&lt;p&gt;Some resources I found are:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mathe Uffzgi</title>
      <link>http://localhost:1313/post/2022-04-02-mathe-uffzgi/</link>
      <pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2022-04-02-mathe-uffzgi/</guid>
      <description>&lt;p&gt;Once in a while, I&amp;rsquo;m supporting Lea with her math homework (Swiss: &lt;em&gt;Uffzgi&lt;/em&gt;). Here are some tools that help me (remember, that I prefer &lt;a href=&#34;https://fsharp.org&#34;&gt;F#&lt;/a&gt; to other languages. Whenever possible, I use interactive Notebooks and make them available on &lt;a href=&#34;https://github.com/mmgreiner/Notebook&#34;&gt;github Notebooks&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WebSharper simple inputs</title>
      <link>http://localhost:1313/post/2022-03-17-Simple-Inputs/</link>
      <pubDate>Thu, 17 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2022-03-17-Simple-Inputs/</guid>
      <description>&lt;p&gt;This post shows various ways to handle input using &lt;a href=&#34;
https://developers.websharper.com/docs/v4.x/fs/
&#34;&gt;WebSharper&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;client-side&#34;&gt;Client side&lt;/h2&gt;
&lt;p&gt;There are two basic approaches: using HTML templates or using Websharper&amp;rsquo;s HTML.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WebSharper templates</title>
      <link>http://localhost:1313/post/2022-03-13-websharper-templates/</link>
      <pubDate>Sun, 13 Mar 2022 13:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2022-03-13-websharper-templates/</guid>
      <description>&lt;p&gt;WebSharper allows several ways to instatiate HTML, and It took me some thinking to get these terms right:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ws-replace&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ws-hole&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ws-template&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ws-template-children&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;replace&#34;&gt;Replace&lt;/h2&gt;
&lt;p&gt;Replace the given node with the provided string or list of docs.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WebSharper shopping cart</title>
      <link>http://localhost:1313/post/2022-03-13-websharper-shopping-cart/</link>
      <pubDate>Sun, 13 Mar 2022 10:41:39 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2022-03-13-websharper-shopping-cart/</guid>
      <description>&lt;h2 id=&#34;websharper-shopping-cart&#34;&gt;Websharper Shopping cart&lt;/h2&gt;
&lt;p&gt;I found an interesting article from 2020 by Adam Granizc on the implementation of a WebSharper shopping cart in &lt;a href=&#34;https://github.com/intellifactory/blogs/blob/master/user/granicz/20201231-variations-for-a-websharper-shopping-cart.md&#34;&gt;WebSharper Shopping Cart&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Jekyll</title>
      <link>http://localhost:1313/post/2022-03-12-using-jekyll/</link>
      <pubDate>Sat, 12 Mar 2022 19:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2022-03-12-using-jekyll/</guid>
      <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
